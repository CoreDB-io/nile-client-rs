/*
 * Nile API
 *
 * Making SaaS chill.
 *
 * The version of the OpenAPI document: 0.1.0-fdd7cd5
 * Contact: support@thenile.dev
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct AccessTokenInfo {
    #[serde(rename = "id")]
    pub id: String,
    /// The human-friendly label of the access token
    #[serde(rename = "label")]
    pub label: String,
    /// The intended use of the token
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Arbitrary metadata.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<serde_json::Value>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
}

impl AccessTokenInfo {
    pub fn new(id: String, label: String) -> AccessTokenInfo {
        AccessTokenInfo {
            id,
            label,
            description: None,
            metadata: None,
            created: None,
        }
    }
}
