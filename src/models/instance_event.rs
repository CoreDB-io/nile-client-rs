/*
 * Nile API
 *
 * Making SaaS chill.
 *
 * The version of the OpenAPI document: 0.1.0-fdd7cd5
 * Contact: support@thenile.dev
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InstanceEvent {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "event_type", skip_serializing_if = "Option::is_none")]
    pub event_type: Option<EventType>,
    #[serde(rename = "before", skip_serializing_if = "Option::is_none")]
    pub before: Option<Box<crate::models::Instance>>,
    #[serde(rename = "after", skip_serializing_if = "Option::is_none")]
    pub after: Option<Box<crate::models::Instance>>,
    /// The id of the organization that the instance of this event belongs to
    #[serde(rename = "org", skip_serializing_if = "Option::is_none")]
    pub org: Option<String>,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
}

impl InstanceEvent {
    pub fn new(timestamp: String) -> InstanceEvent {
        InstanceEvent {
            id: None,
            event_type: None,
            before: None,
            after: None,
            org: None,
            timestamp,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum EventType {
    #[serde(rename = "CREATE")]
    Create,
    #[serde(rename = "UPDATE")]
    Update,
    #[serde(rename = "DELETE")]
    Delete,
}

impl Default for EventType {
    fn default() -> EventType {
        Self::Create
    }
}

