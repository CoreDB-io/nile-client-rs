/*
 * Nile API
 *
 * Making SaaS chill.
 *
 * The version of the OpenAPI document: 0.1.0-fdd7cd5
 * Contact: support@thenile.dev
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct MoveOperationAllOf {
    /// The JSON Pointer path you would like to move/copy from
    #[serde(rename = "from", skip_serializing_if = "Option::is_none")]
    pub from: Option<String>,
    /// The JSON Pointer path you would like to move/copy to
    #[serde(rename = "path", skip_serializing_if = "Option::is_none")]
    pub path: Option<String>,
    #[serde(rename = "op", skip_serializing_if = "Option::is_none")]
    pub op: Option<Op>,
}

impl MoveOperationAllOf {
    pub fn new() -> MoveOperationAllOf {
        MoveOperationAllOf {
            from: None,
            path: None,
            op: None,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Op {
    #[serde(rename = "move")]
    Move,
}

impl Default for Op {
    fn default() -> Op {
        Self::Move
    }
}

use serde::{Deserialize, Serialize};
