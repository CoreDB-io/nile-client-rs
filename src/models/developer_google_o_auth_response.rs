/*
 * Nile API
 *
 * Making SaaS chill.
 *
 * The version of the OpenAPI document: 0.1.0-fdd7cd5
 * Contact: support@thenile.dev
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DeveloperGoogleOAuthResponse {
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::User>>,
    /// JWT authentication token. Most Nile operations the caller to pass a valid token in Authorization HTTP header using Bearer schema
    #[serde(rename = "token")]
    pub token: String,
}

impl DeveloperGoogleOAuthResponse {
    pub fn new(token: String) -> DeveloperGoogleOAuthResponse {
        DeveloperGoogleOAuthResponse { user: None, token }
    }
}

use serde::{Deserialize, Serialize};
